/*
 * generated by Xtext 2.27.0
 */
grammar InternalMy;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package mde.pauline.metaheres.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package mde.pauline.metaheres.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import mde.pauline.metaheres.services.MyGrammarAccess;

}

@parser::members {

 	private MyGrammarAccess grammarAccess;

    public InternalMyParser(TokenStream input, MyGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SServiceName";
   	}

   	@Override
   	protected MyGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSServiceName
entryRuleSServiceName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSServiceNameRule()); }
	iv_ruleSServiceName=ruleSServiceName
	{ $current=$iv_ruleSServiceName.current; }
	EOF;

// Rule SServiceName
ruleSServiceName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSServiceNameAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSServiceNameRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSServiceNameAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSServiceNameAccess().getServiceconfigServiceConfigParserRuleCall_2_0());
				}
				lv_serviceconfig_2_0=ruleServiceConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSServiceNameRule());
					}
					set(
						$current,
						"serviceconfig",
						lv_serviceconfig_2_0,
						"mde.pauline.metaheres.My.ServiceConfig");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleServiceConfig
entryRuleServiceConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceConfigRule()); }
	iv_ruleServiceConfig=ruleServiceConfig
	{ $current=$iv_ruleServiceConfig.current; }
	EOF;

// Rule ServiceConfig
ruleServiceConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_closesOnPublicHolidays_0_0='ferme-les-jours-feries'
				{
					newLeafNode(lv_closesOnPublicHolidays_0_0, grammarAccess.getServiceConfigAccess().getClosesOnPublicHolidaysFermeLesJoursFeriesKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceConfigRule());
					}
					setWithLastConsumed($current, "closesOnPublicHolidays", lv_closesOnPublicHolidays_0_0 != null, "ferme-les-jours-feries");
				}
			)
		)?
		(
			(
				lv_inventoryIsPublic_1_0='inventaire-public'
				{
					newLeafNode(lv_inventoryIsPublic_1_0, grammarAccess.getServiceConfigAccess().getInventoryIsPublicInventairePublicKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceConfigRule());
					}
					setWithLastConsumed($current, "inventoryIsPublic", lv_inventoryIsPublic_1_0 != null, "inventaire-public");
				}
			)
		)?
		(
			(
				lv_hasChart_2_0='charte-d-utilisation-visible'
				{
					newLeafNode(lv_hasChart_2_0, grammarAccess.getServiceConfigAccess().getHasChartCharteDUtilisationVisibleKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceConfigRule());
					}
					setWithLastConsumed($current, "hasChart", lv_hasChart_2_0 != null, "charte-d-utilisation-visible");
				}
			)
		)?
		(
			(
				lv_countInBusinessDays_3_0='compte-en-jours-ouvrables'
				{
					newLeafNode(lv_countInBusinessDays_3_0, grammarAccess.getServiceConfigAccess().getCountInBusinessDaysCompteEnJoursOuvrablesKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceConfigRule());
					}
					setWithLastConsumed($current, "countInBusinessDays", lv_countInBusinessDays_3_0 != null, "compte-en-jours-ouvrables");
				}
			)
		)?
		otherlv_4='pays'
		{
			newLeafNode(otherlv_4, grammarAccess.getServiceConfigAccess().getPaysKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getServiceConfigAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceConfigAccess().getCountryCountryParserRuleCall_6_0());
				}
				lv_country_6_0=ruleCountry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
					}
					add(
						$current,
						"country",
						lv_country_6_0,
						"mde.pauline.metaheres.My.Country");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getServiceConfigAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceConfigAccess().getCountryCountryParserRuleCall_7_1_0());
					}
					lv_country_8_0=ruleCountry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
						}
						add(
							$current,
							"country",
							lv_country_8_0,
							"mde.pauline.metaheres.My.Country");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_9='paiements-proposes'
			{
				newLeafNode(otherlv_9, grammarAccess.getServiceConfigAccess().getPaiementsProposesKeyword_8_0());
			}
			otherlv_10=':'
			{
				newLeafNode(otherlv_10, grammarAccess.getServiceConfigAccess().getColonKeyword_8_1());
			}
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getServiceConfigAccess().getLeftParenthesisKeyword_8_2());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceConfigRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getServiceConfigAccess().getPricingsystemPricingSystemCrossReference_8_3_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getServiceConfigAccess().getCommaKeyword_8_4_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getServiceConfigRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getServiceConfigAccess().getPricingsystemPricingSystemCrossReference_8_4_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_15=')'
		{
			newLeafNode(otherlv_15, grammarAccess.getServiceConfigAccess().getRightParenthesisKeyword_9());
		}
		otherlv_16='langues'
		{
			newLeafNode(otherlv_16, grammarAccess.getServiceConfigAccess().getLanguesKeyword_10());
		}
		otherlv_17=':'
		{
			newLeafNode(otherlv_17, grammarAccess.getServiceConfigAccess().getColonKeyword_11());
		}
		otherlv_18='('
		{
			newLeafNode(otherlv_18, grammarAccess.getServiceConfigAccess().getLeftParenthesisKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceConfigAccess().getLanguageLanguageParserRuleCall_13_0());
				}
				lv_language_19_0=ruleLanguage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
					}
					add(
						$current,
						"language",
						lv_language_19_0,
						"mde.pauline.metaheres.My.Language");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_20=','
			{
				newLeafNode(otherlv_20, grammarAccess.getServiceConfigAccess().getCommaKeyword_14_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceConfigAccess().getLanguageLanguageParserRuleCall_14_1_0());
					}
					lv_language_21_0=ruleLanguage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
						}
						add(
							$current,
							"language",
							lv_language_21_0,
							"mde.pauline.metaheres.My.Language");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_22=')'
		{
			newLeafNode(otherlv_22, grammarAccess.getServiceConfigAccess().getRightParenthesisKeyword_15());
		}
		otherlv_23='configuration-reservations'
		{
			newLeafNode(otherlv_23, grammarAccess.getServiceConfigAccess().getConfigurationReservationsKeyword_16());
		}
		otherlv_24=':'
		{
			newLeafNode(otherlv_24, grammarAccess.getServiceConfigAccess().getColonKeyword_17());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceConfigAccess().getReservationsconfigReservationsConfigParserRuleCall_18_0());
				}
				lv_reservationsconfig_25_0=ruleReservationsConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
					}
					set(
						$current,
						"reservationsconfig",
						lv_reservationsconfig_25_0,
						"mde.pauline.metaheres.My.ReservationsConfig");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_26='configuration-ressources'
		{
			newLeafNode(otherlv_26, grammarAccess.getServiceConfigAccess().getConfigurationRessourcesKeyword_19());
		}
		otherlv_27=':'
		{
			newLeafNode(otherlv_27, grammarAccess.getServiceConfigAccess().getColonKeyword_20());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceConfigAccess().getResourcesconfigResourcesConfigParserRuleCall_21_0());
				}
				lv_resourcesconfig_28_0=ruleResourcesConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
					}
					add(
						$current,
						"resourcesconfig",
						lv_resourcesconfig_28_0,
						"mde.pauline.metaheres.My.ResourcesConfig");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_29=','
			{
				newLeafNode(otherlv_29, grammarAccess.getServiceConfigAccess().getCommaKeyword_22_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceConfigAccess().getResourcesconfigResourcesConfigParserRuleCall_22_1_0());
					}
					lv_resourcesconfig_30_0=ruleResourcesConfig
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
						}
						add(
							$current,
							"resourcesconfig",
							lv_resourcesconfig_30_0,
							"mde.pauline.metaheres.My.ResourcesConfig");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_31='lotsconfig'
			{
				newLeafNode(otherlv_31, grammarAccess.getServiceConfigAccess().getLotsconfigKeyword_23_0());
			}
			otherlv_32=':'
			{
				newLeafNode(otherlv_32, grammarAccess.getServiceConfigAccess().getColonKeyword_23_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceConfigAccess().getLotsconfigLotsConfigParserRuleCall_23_2_0());
					}
					lv_lotsconfig_33_0=ruleLotsConfig
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
						}
						set(
							$current,
							"lotsconfig",
							lv_lotsconfig_33_0,
							"mde.pauline.metaheres.My.LotsConfig");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleLanguage
entryRuleLanguage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLanguageRule()); }
	iv_ruleLanguage=ruleLanguage
	{ $current=$iv_ruleLanguage.current; }
	EOF;

// Rule Language
ruleLanguage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLanguageAccess().getLanguageAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLanguageAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLanguageRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReservationsConfig
entryRuleReservationsConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReservationsConfigRule()); }
	iv_ruleReservationsConfig=ruleReservationsConfig
	{ $current=$iv_ruleReservationsConfig.current; }
	EOF;

// Rule ReservationsConfig
ruleReservationsConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_hasMoveOutCheck_0_0='etat-des-lieux-sortie'
				{
					newLeafNode(lv_hasMoveOutCheck_0_0, grammarAccess.getReservationsConfigAccess().getHasMoveOutCheckEtatDesLieuxSortieKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReservationsConfigRule());
					}
					setWithLastConsumed($current, "hasMoveOutCheck", lv_hasMoveOutCheck_0_0 != null, "etat-des-lieux-sortie");
				}
			)
		)
		(
			(
				lv_hasMoveInCheck_1_0='etat-des-lieux-retour'
				{
					newLeafNode(lv_hasMoveInCheck_1_0, grammarAccess.getReservationsConfigAccess().getHasMoveInCheckEtatDesLieuxRetourKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReservationsConfigRule());
					}
					setWithLastConsumed($current, "hasMoveInCheck", lv_hasMoveInCheck_1_0 != null, "etat-des-lieux-retour");
				}
			)
		)?
		otherlv_2='avance-minimum-et-maximum-reservation'
		{
			newLeafNode(otherlv_2, grammarAccess.getReservationsConfigAccess().getAvanceMinimumEtMaximumReservationKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getReservationsConfigAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReservationsConfigAccess().getMinRequestAdvanceEIntParserRuleCall_4_0());
				}
				lv_minRequestAdvance_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReservationsConfigRule());
					}
					set(
						$current,
						"minRequestAdvance",
						lv_minRequestAdvance_4_0,
						"mde.pauline.metaheres.My.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getReservationsConfigAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReservationsConfigAccess().getMaxRequestAdvanceEIntParserRuleCall_6_0());
				}
				lv_maxRequestAdvance_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReservationsConfigRule());
					}
					set(
						$current,
						"maxRequestAdvance",
						lv_maxRequestAdvance_6_0,
						"mde.pauline.metaheres.My.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='statuts-des-demandes'
		{
			newLeafNode(otherlv_7, grammarAccess.getReservationsConfigAccess().getStatutsDesDemandesKeyword_7());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getReservationsConfigAccess().getColonKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReservationsConfigAccess().getStatuslistStatusListParserRuleCall_9_0());
				}
				lv_statuslist_9_0=ruleStatusList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReservationsConfigRule());
					}
					set(
						$current,
						"statuslist",
						lv_statuslist_9_0,
						"mde.pauline.metaheres.My.StatusList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCountry
entryRuleCountry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountryRule()); }
	iv_ruleCountry=ruleCountry
	{ $current=$iv_ruleCountry.current; }
	EOF;

// Rule Country
ruleCountry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCountryAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountryRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getCountryAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCountryAccess().getLanguageLanguageParserRuleCall_2_0());
				}
				lv_language_2_0=ruleLanguage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountryRule());
					}
					set(
						$current,
						"language",
						lv_language_2_0,
						"mde.pauline.metaheres.My.Language");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getCountryAccess().getCommaKeyword_3());
		}
		otherlv_4='tarification'
		{
			newLeafNode(otherlv_4, grammarAccess.getCountryAccess().getTarificationKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getCountryAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCountryAccess().getPricingsystemPricingSystemParserRuleCall_6_0());
				}
				lv_pricingsystem_6_0=rulePricingSystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountryRule());
					}
					set(
						$current,
						"pricingsystem",
						lv_pricingsystem_6_0,
						"mde.pauline.metaheres.My.PricingSystem");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleResourcesConfig
entryRuleResourcesConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourcesConfigRule()); }
	iv_ruleResourcesConfig=ruleResourcesConfig
	{ $current=$iv_ruleResourcesConfig.current; }
	EOF;

// Rule ResourcesConfig
ruleResourcesConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getResourcesConfigAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				lv_hasImage_1_0='avec-illustration'
				{
					newLeafNode(lv_hasImage_1_0, grammarAccess.getResourcesConfigAccess().getHasImageAvecIllustrationKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourcesConfigRule());
					}
					setWithLastConsumed($current, "hasImage", lv_hasImage_1_0 != null, "avec-illustration");
				}
			)
		)?
		(
			(
				lv_hasOneStockPerSlot_2_0='un-stock-par-ouverture'
				{
					newLeafNode(lv_hasOneStockPerSlot_2_0, grammarAccess.getResourcesConfigAccess().getHasOneStockPerSlotUnStockParOuvertureKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourcesConfigRule());
					}
					setWithLastConsumed($current, "hasOneStockPerSlot", lv_hasOneStockPerSlot_2_0 != null, "un-stock-par-ouverture");
				}
			)
		)?
		(
			(
				lv_isConsumable_3_0='type-consommable'
				{
					newLeafNode(lv_isConsumable_3_0, grammarAccess.getResourcesConfigAccess().getIsConsumableTypeConsommableKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourcesConfigRule());
					}
					setWithLastConsumed($current, "isConsumable", lv_isConsumable_3_0 != null, "type-consommable");
				}
			)
		)?
		(
			(
				lv_isLoan_4_0='emprunt-avec-retour'
				{
					newLeafNode(lv_isLoan_4_0, grammarAccess.getResourcesConfigAccess().getIsLoanEmpruntAvecRetourKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourcesConfigRule());
					}
					setWithLastConsumed($current, "isLoan", lv_isLoan_4_0 != null, "emprunt-avec-retour");
				}
			)
		)?
		(
			(
				lv_isCharged_5_0='payant'
				{
					newLeafNode(lv_isCharged_5_0, grammarAccess.getResourcesConfigAccess().getIsChargedPayantKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourcesConfigRule());
					}
					setWithLastConsumed($current, "isCharged", lv_isCharged_5_0 != null, "payant");
				}
			)
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getResourcesConfigAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleLotsConfig
entryRuleLotsConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLotsConfigRule()); }
	iv_ruleLotsConfig=ruleLotsConfig
	{ $current=$iv_ruleLotsConfig.current; }
	EOF;

// Rule LotsConfig
ruleLotsConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLotsConfigAccess().getLotsConfigAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLotsConfigAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_hasImage_2_0='avec-illustration'
				{
					newLeafNode(lv_hasImage_2_0, grammarAccess.getLotsConfigAccess().getHasImageAvecIllustrationKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLotsConfigRule());
					}
					setWithLastConsumed($current, "hasImage", lv_hasImage_2_0 != null, "avec-illustration");
				}
			)
		)?
		(
			(
				lv_hasOneStockPerSlot_3_0='un-stock-par-ouverture'
				{
					newLeafNode(lv_hasOneStockPerSlot_3_0, grammarAccess.getLotsConfigAccess().getHasOneStockPerSlotUnStockParOuvertureKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLotsConfigRule());
					}
					setWithLastConsumed($current, "hasOneStockPerSlot", lv_hasOneStockPerSlot_3_0 != null, "un-stock-par-ouverture");
				}
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getLotsConfigAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRulePricingSystem
entryRulePricingSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPricingSystemRule()); }
	iv_rulePricingSystem=rulePricingSystem
	{ $current=$iv_rulePricingSystem.current; }
	EOF;

// Rule PricingSystem
rulePricingSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPricingSystemAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPricingSystemRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPricingSystemAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2='devise'
		{
			newLeafNode(otherlv_2, grammarAccess.getPricingSystemAccess().getDeviseKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getPricingSystemAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPricingSystemAccess().getCurrencyEStringParserRuleCall_4_0());
				}
				lv_currency_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPricingSystemRule());
					}
					set(
						$current,
						"currency",
						lv_currency_4_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getPricingSystemAccess().getCommaKeyword_5());
		}
		otherlv_6='systeme-comptable'
		{
			newLeafNode(otherlv_6, grammarAccess.getPricingSystemAccess().getSystemeComptableKeyword_6());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getPricingSystemAccess().getColonKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPricingSystemAccess().getTaxSystemEStringParserRuleCall_8_0());
				}
				lv_taxSystem_8_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPricingSystemRule());
					}
					set(
						$current,
						"taxSystem",
						lv_taxSystem_8_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getPricingSystemAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleStatusList
entryRuleStatusList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatusListRule()); }
	iv_ruleStatusList=ruleStatusList
	{ $current=$iv_ruleStatusList.current; }
	EOF;

// Rule StatusList
ruleStatusList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getStatusListAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatusListAccess().getStatusStatusParserRuleCall_1_0());
				}
				lv_status_1_0=ruleStatus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatusListRule());
					}
					add(
						$current,
						"status",
						lv_status_1_0,
						"mde.pauline.metaheres.My.Status");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getStatusListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatusListAccess().getStatusStatusParserRuleCall_2_1_0());
					}
					lv_status_3_0=ruleStatus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatusListRule());
						}
						add(
							$current,
							"status",
							lv_status_3_0,
							"mde.pauline.metaheres.My.Status");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getStatusListAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleStatus
entryRuleStatus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatusRule()); }
	iv_ruleStatus=ruleStatus
	{ $current=$iv_ruleStatus.current; }
	EOF;

// Rule Status
ruleStatus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatusAccess().getStatusAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStatusAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatusRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
