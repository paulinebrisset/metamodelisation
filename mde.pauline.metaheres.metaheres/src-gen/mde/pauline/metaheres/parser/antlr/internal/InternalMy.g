/*
 * generated by Xtext 2.27.0
 */
grammar InternalMy;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package mde.pauline.metaheres.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package mde.pauline.metaheres.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import mde.pauline.metaheres.services.MyGrammarAccess;

}

@parser::members {

 	private MyGrammarAccess grammarAccess;

    public InternalMyParser(TokenStream input, MyGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SServiceName";
   	}

   	@Override
   	protected MyGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSServiceName
entryRuleSServiceName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSServiceNameRule()); }
	iv_ruleSServiceName=ruleSServiceName
	{ $current=$iv_ruleSServiceName.current; }
	EOF;

// Rule SServiceName
ruleSServiceName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSServiceNameAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSServiceNameRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSServiceNameAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSServiceNameAccess().getServiceconfigServiceConfigParserRuleCall_2_0());
				}
				lv_serviceconfig_2_0=ruleServiceConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSServiceNameRule());
					}
					set(
						$current,
						"serviceconfig",
						lv_serviceconfig_2_0,
						"mde.pauline.metaheres.My.ServiceConfig");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleServiceConfig
entryRuleServiceConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceConfigRule()); }
	iv_ruleServiceConfig=ruleServiceConfig
	{ $current=$iv_ruleServiceConfig.current; }
	EOF;

// Rule ServiceConfig
ruleServiceConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_closesOnPublicHolidays_0_0='closesOnPublicHolidays'
				{
					newLeafNode(lv_closesOnPublicHolidays_0_0, grammarAccess.getServiceConfigAccess().getClosesOnPublicHolidaysClosesOnPublicHolidaysKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceConfigRule());
					}
					setWithLastConsumed($current, "closesOnPublicHolidays", lv_closesOnPublicHolidays_0_0 != null, "closesOnPublicHolidays");
				}
			)
		)?
		(
			(
				lv_inventoryIsPublic_1_0='inventoryIsPublic'
				{
					newLeafNode(lv_inventoryIsPublic_1_0, grammarAccess.getServiceConfigAccess().getInventoryIsPublicInventoryIsPublicKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceConfigRule());
					}
					setWithLastConsumed($current, "inventoryIsPublic", lv_inventoryIsPublic_1_0 != null, "inventoryIsPublic");
				}
			)
		)?
		(
			(
				lv_hasChart_2_0='hasChart'
				{
					newLeafNode(lv_hasChart_2_0, grammarAccess.getServiceConfigAccess().getHasChartHasChartKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceConfigRule());
					}
					setWithLastConsumed($current, "hasChart", lv_hasChart_2_0 != null, "hasChart");
				}
			)
		)?
		(
			(
				lv_countInBusinessDays_3_0='countInBusinessDays'
				{
					newLeafNode(lv_countInBusinessDays_3_0, grammarAccess.getServiceConfigAccess().getCountInBusinessDaysCountInBusinessDaysKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceConfigRule());
					}
					setWithLastConsumed($current, "countInBusinessDays", lv_countInBusinessDays_3_0 != null, "countInBusinessDays");
				}
			)
		)?
		otherlv_4='country'
		{
			newLeafNode(otherlv_4, grammarAccess.getServiceConfigAccess().getCountryKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getServiceConfigAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceConfigAccess().getCountryCountryParserRuleCall_6_0());
				}
				lv_country_6_0=ruleCountry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
					}
					add(
						$current,
						"country",
						lv_country_6_0,
						"mde.pauline.metaheres.My.Country");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getServiceConfigAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceConfigAccess().getCountryCountryParserRuleCall_7_1_0());
					}
					lv_country_8_0=ruleCountry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
						}
						add(
							$current,
							"country",
							lv_country_8_0,
							"mde.pauline.metaheres.My.Country");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_9='pricingsystem'
			{
				newLeafNode(otherlv_9, grammarAccess.getServiceConfigAccess().getPricingsystemKeyword_8_0());
			}
			otherlv_10=':'
			{
				newLeafNode(otherlv_10, grammarAccess.getServiceConfigAccess().getColonKeyword_8_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceConfigRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getServiceConfigAccess().getPricingsystemPricingSystemCrossReference_8_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getServiceConfigAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getServiceConfigRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getServiceConfigAccess().getPricingsystemPricingSystemCrossReference_8_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_14='lang'
		{
			newLeafNode(otherlv_14, grammarAccess.getServiceConfigAccess().getLangKeyword_9());
		}
		otherlv_15=':'
		{
			newLeafNode(otherlv_15, grammarAccess.getServiceConfigAccess().getColonKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceConfigAccess().getLanguageLanguageParserRuleCall_11_0());
				}
				lv_language_16_0=ruleLanguage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
					}
					add(
						$current,
						"language",
						lv_language_16_0,
						"mde.pauline.metaheres.My.Language");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_17=','
			{
				newLeafNode(otherlv_17, grammarAccess.getServiceConfigAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceConfigAccess().getLanguageLanguageParserRuleCall_12_1_0());
					}
					lv_language_18_0=ruleLanguage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
						}
						add(
							$current,
							"language",
							lv_language_18_0,
							"mde.pauline.metaheres.My.Language");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_19='reservationsconfig'
		{
			newLeafNode(otherlv_19, grammarAccess.getServiceConfigAccess().getReservationsconfigKeyword_13());
		}
		otherlv_20=':'
		{
			newLeafNode(otherlv_20, grammarAccess.getServiceConfigAccess().getColonKeyword_14());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceConfigAccess().getReservationsconfigReservationsConfigParserRuleCall_15_0());
				}
				lv_reservationsconfig_21_0=ruleReservationsConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
					}
					set(
						$current,
						"reservationsconfig",
						lv_reservationsconfig_21_0,
						"mde.pauline.metaheres.My.ReservationsConfig");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_22='resourcesconfig'
		{
			newLeafNode(otherlv_22, grammarAccess.getServiceConfigAccess().getResourcesconfigKeyword_16());
		}
		otherlv_23=':'
		{
			newLeafNode(otherlv_23, grammarAccess.getServiceConfigAccess().getColonKeyword_17());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceConfigAccess().getResourcesconfigResourcesConfigParserRuleCall_18_0());
				}
				lv_resourcesconfig_24_0=ruleResourcesConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
					}
					add(
						$current,
						"resourcesconfig",
						lv_resourcesconfig_24_0,
						"mde.pauline.metaheres.My.ResourcesConfig");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_25=','
			{
				newLeafNode(otherlv_25, grammarAccess.getServiceConfigAccess().getCommaKeyword_19_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceConfigAccess().getResourcesconfigResourcesConfigParserRuleCall_19_1_0());
					}
					lv_resourcesconfig_26_0=ruleResourcesConfig
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
						}
						add(
							$current,
							"resourcesconfig",
							lv_resourcesconfig_26_0,
							"mde.pauline.metaheres.My.ResourcesConfig");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_27='lotsconfig'
			{
				newLeafNode(otherlv_27, grammarAccess.getServiceConfigAccess().getLotsconfigKeyword_20_0());
			}
			otherlv_28=':'
			{
				newLeafNode(otherlv_28, grammarAccess.getServiceConfigAccess().getColonKeyword_20_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceConfigAccess().getLotsconfigLotsConfigParserRuleCall_20_2_0());
					}
					lv_lotsconfig_29_0=ruleLotsConfig
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceConfigRule());
						}
						set(
							$current,
							"lotsconfig",
							lv_lotsconfig_29_0,
							"mde.pauline.metaheres.My.LotsConfig");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleLanguage
entryRuleLanguage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLanguageRule()); }
	iv_ruleLanguage=ruleLanguage
	{ $current=$iv_ruleLanguage.current; }
	EOF;

// Rule Language
ruleLanguage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLanguageAccess().getLanguageAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLanguageAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLanguageRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReservationsConfig
entryRuleReservationsConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReservationsConfigRule()); }
	iv_ruleReservationsConfig=ruleReservationsConfig
	{ $current=$iv_ruleReservationsConfig.current; }
	EOF;

// Rule ReservationsConfig
ruleReservationsConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_hasMoveOutCheck_0_0='hasMoveOutCheck'
				{
					newLeafNode(lv_hasMoveOutCheck_0_0, grammarAccess.getReservationsConfigAccess().getHasMoveOutCheckHasMoveOutCheckKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReservationsConfigRule());
					}
					setWithLastConsumed($current, "hasMoveOutCheck", lv_hasMoveOutCheck_0_0 != null, "hasMoveOutCheck");
				}
			)
		)
		(
			(
				lv_hasMoveInCheck_1_0='hasMoveInCheck'
				{
					newLeafNode(lv_hasMoveInCheck_1_0, grammarAccess.getReservationsConfigAccess().getHasMoveInCheckHasMoveInCheckKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReservationsConfigRule());
					}
					setWithLastConsumed($current, "hasMoveInCheck", lv_hasMoveInCheck_1_0 != null, "hasMoveInCheck");
				}
			)
		)?
		otherlv_2='minRequestAdvance'
		{
			newLeafNode(otherlv_2, grammarAccess.getReservationsConfigAccess().getMinRequestAdvanceKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReservationsConfigAccess().getMinRequestAdvanceEIntParserRuleCall_3_0());
				}
				lv_minRequestAdvance_3_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReservationsConfigRule());
					}
					set(
						$current,
						"minRequestAdvance",
						lv_minRequestAdvance_3_0,
						"mde.pauline.metaheres.My.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='maxRequestAdvance'
		{
			newLeafNode(otherlv_4, grammarAccess.getReservationsConfigAccess().getMaxRequestAdvanceKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReservationsConfigAccess().getMaxRequestAdvanceEIntParserRuleCall_5_0());
				}
				lv_maxRequestAdvance_5_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReservationsConfigRule());
					}
					set(
						$current,
						"maxRequestAdvance",
						lv_maxRequestAdvance_5_0,
						"mde.pauline.metaheres.My.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='statuslist'
		{
			newLeafNode(otherlv_6, grammarAccess.getReservationsConfigAccess().getStatuslistKeyword_6());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getReservationsConfigAccess().getColonKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReservationsConfigAccess().getStatuslistStatusListParserRuleCall_8_0());
				}
				lv_statuslist_8_0=ruleStatusList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReservationsConfigRule());
					}
					set(
						$current,
						"statuslist",
						lv_statuslist_8_0,
						"mde.pauline.metaheres.My.StatusList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCountry
entryRuleCountry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountryRule()); }
	iv_ruleCountry=ruleCountry
	{ $current=$iv_ruleCountry.current; }
	EOF;

// Rule Country
ruleCountry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCountryAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountryRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='lang'
		{
			newLeafNode(otherlv_1, grammarAccess.getCountryAccess().getLangKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCountryAccess().getLanguageLanguageParserRuleCall_2_0());
				}
				lv_language_2_0=ruleLanguage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountryRule());
					}
					set(
						$current,
						"language",
						lv_language_2_0,
						"mde.pauline.metaheres.My.Language");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='pricing'
		{
			newLeafNode(otherlv_3, grammarAccess.getCountryAccess().getPricingKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getCountryAccess().getColonKeyword_4());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getCountryAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCountryAccess().getPricingsystemPricingSystemParserRuleCall_6_0());
				}
				lv_pricingsystem_6_0=rulePricingSystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountryRule());
					}
					set(
						$current,
						"pricingsystem",
						lv_pricingsystem_6_0,
						"mde.pauline.metaheres.My.PricingSystem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getCountryAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleResourcesConfig
entryRuleResourcesConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourcesConfigRule()); }
	iv_ruleResourcesConfig=ruleResourcesConfig
	{ $current=$iv_ruleResourcesConfig.current; }
	EOF;

// Rule ResourcesConfig
ruleResourcesConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_hasImage_0_0='hasImage'
				{
					newLeafNode(lv_hasImage_0_0, grammarAccess.getResourcesConfigAccess().getHasImageHasImageKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourcesConfigRule());
					}
					setWithLastConsumed($current, "hasImage", lv_hasImage_0_0 != null, "hasImage");
				}
			)
		)?
		(
			(
				lv_hasOneStockPerSlot_1_0='hasOneStockPerSlot'
				{
					newLeafNode(lv_hasOneStockPerSlot_1_0, grammarAccess.getResourcesConfigAccess().getHasOneStockPerSlotHasOneStockPerSlotKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourcesConfigRule());
					}
					setWithLastConsumed($current, "hasOneStockPerSlot", lv_hasOneStockPerSlot_1_0 != null, "hasOneStockPerSlot");
				}
			)
		)?
		(
			(
				lv_isConsumable_2_0='isConsumable'
				{
					newLeafNode(lv_isConsumable_2_0, grammarAccess.getResourcesConfigAccess().getIsConsumableIsConsumableKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourcesConfigRule());
					}
					setWithLastConsumed($current, "isConsumable", lv_isConsumable_2_0 != null, "isConsumable");
				}
			)
		)
		(
			(
				lv_isLoan_3_0='isLoan'
				{
					newLeafNode(lv_isLoan_3_0, grammarAccess.getResourcesConfigAccess().getIsLoanIsLoanKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourcesConfigRule());
					}
					setWithLastConsumed($current, "isLoan", lv_isLoan_3_0 != null, "isLoan");
				}
			)
		)?
		(
			(
				lv_isCharged_4_0='isCharged'
				{
					newLeafNode(lv_isCharged_4_0, grammarAccess.getResourcesConfigAccess().getIsChargedIsChargedKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourcesConfigRule());
					}
					setWithLastConsumed($current, "isCharged", lv_isCharged_4_0 != null, "isCharged");
				}
			)
		)?
	)
;

// Entry rule entryRuleLotsConfig
entryRuleLotsConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLotsConfigRule()); }
	iv_ruleLotsConfig=ruleLotsConfig
	{ $current=$iv_ruleLotsConfig.current; }
	EOF;

// Rule LotsConfig
ruleLotsConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLotsConfigAccess().getLotsConfigAction_0(),
					$current);
			}
		)
		(
			(
				lv_hasImage_1_0='hasImage'
				{
					newLeafNode(lv_hasImage_1_0, grammarAccess.getLotsConfigAccess().getHasImageHasImageKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLotsConfigRule());
					}
					setWithLastConsumed($current, "hasImage", lv_hasImage_1_0 != null, "hasImage");
				}
			)
		)?
		(
			(
				lv_hasOneStockPerSlot_2_0='hasOneStockPerSlot'
				{
					newLeafNode(lv_hasOneStockPerSlot_2_0, grammarAccess.getLotsConfigAccess().getHasOneStockPerSlotHasOneStockPerSlotKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLotsConfigRule());
					}
					setWithLastConsumed($current, "hasOneStockPerSlot", lv_hasOneStockPerSlot_2_0 != null, "hasOneStockPerSlot");
				}
			)
		)?
	)
;

// Entry rule entryRulePricingSystem
entryRulePricingSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPricingSystemRule()); }
	iv_rulePricingSystem=rulePricingSystem
	{ $current=$iv_rulePricingSystem.current; }
	EOF;

// Rule PricingSystem
rulePricingSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPricingSystemAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPricingSystemRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPricingSystemAccess().getColonKeyword_1());
		}
		otherlv_2='currency'
		{
			newLeafNode(otherlv_2, grammarAccess.getPricingSystemAccess().getCurrencyKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPricingSystemAccess().getCurrencyEStringParserRuleCall_3_0());
				}
				lv_currency_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPricingSystemRule());
					}
					set(
						$current,
						"currency",
						lv_currency_3_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getPricingSystemAccess().getCommaKeyword_4());
		}
		otherlv_5='taxSystem'
		{
			newLeafNode(otherlv_5, grammarAccess.getPricingSystemAccess().getTaxSystemKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPricingSystemAccess().getTaxSystemEStringParserRuleCall_6_0());
				}
				lv_taxSystem_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPricingSystemRule());
					}
					set(
						$current,
						"taxSystem",
						lv_taxSystem_6_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleStatusList
entryRuleStatusList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatusListRule()); }
	iv_ruleStatusList=ruleStatusList
	{ $current=$iv_ruleStatusList.current; }
	EOF;

// Rule StatusList
ruleStatusList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getStatusListAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatusListAccess().getStatusStatusParserRuleCall_1_0());
				}
				lv_status_1_0=ruleStatus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatusListRule());
					}
					add(
						$current,
						"status",
						lv_status_1_0,
						"mde.pauline.metaheres.My.Status");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getStatusListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatusListAccess().getStatusStatusParserRuleCall_2_1_0());
					}
					lv_status_3_0=ruleStatus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatusListRule());
						}
						add(
							$current,
							"status",
							lv_status_3_0,
							"mde.pauline.metaheres.My.Status");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getStatusListAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleStatus
entryRuleStatus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatusRule()); }
	iv_ruleStatus=ruleStatus
	{ $current=$iv_ruleStatus.current; }
	EOF;

// Rule Status
ruleStatus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatusAccess().getStatusAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStatusAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatusRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"mde.pauline.metaheres.My.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
